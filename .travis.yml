language: node_js

node_js:
  - 8.6.0

cache:
  bundler: true

directories:
  - node_modules

before_install:
  - openssl aes-256-cbc -K $encrypted_6eca20d45730_key -iv $encrypted_6eca20d45730_iv -in id_rsa.enc -out ~/.ssh/id_rsa -d
  - chmod 600 ~/.ssh/id_rsa
  - echo -e "Host $STAGING_SERVER\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - echo -e "Host $PRODUCTION_SERVER\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

before_script:
  - npm install

script:
  - npm run test

deploy:
  - provider: script
    skip_cleanup: true
    script:
      ssh -p $PORT $USER@$STAGING_SERVER 'cd /var/www/m && git pull' &&
      ssh -p $PORT $USER@$STAGING_SERVER 'cd /var/www/m && npm install' &&
      ssh -p $PORT $USER@$STAGING_SERVER 'cd /var/www/m && npm run staging' &&
      ssh -p $PORT $USER@$STAGING_SERVER 'cd /var/www/m && pm2 startOrRestart pm2.config.js --env=staging'
    on:
      branch: master
  - provider: script
    skip_cleanup: true
    script:
      ssh -p $PORT $USER@$PRODUCTION_SERVER 'cd /var/www/m && git pull' &&
      ssh -p $PORT $USER@$PRODUCTION_SERVER 'cd /var/www/m && npm install' &&
      ssh -p $PORT $USER@$PRODUCTION_SERVER 'cd /var/www/m && npm run production' &&
      ssh -p $PORT $USER@$PRODUCTION_SERVER 'cd /var/www/m && pm2 startOrRestart pm2.config.js --env=production'
    on:
      branch: deploy
