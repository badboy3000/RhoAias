{"version":3,"file":"pages/world.chunk.348df72c.js","sources":["webpack:///./mixins/upload.js"],"sourcesContent":["export default {\n  data() {\n    return {\n      uploadHeaders: {\n        key: '',\n        token: ''\n      },\n      uploadConfig: {\n        max: 5\n      },\n      imageUploadAccept: [\n        'image/jpeg',\n        'image/png',\n        'image/jpg',\n        'image/gif'\n      ].toString(),\n      imageUploadAction: 'https://upload.qiniup.com',\n      imagePrefix: 'https://image.calibur.tv/',\n      getUpTokenTimer: 0,\n      uploadPending: 0,\n      uploadImageTotal: 0,\n      uploadImageList: []\n    }\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.user\n    }\n  },\n  watch: {\n    currentUser: {\n      handler: function(val) {\n        if (val && val.uptoken) {\n          this.uploadHeaders.token = val.uptoken.upToken\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  mounted() {\n    this.getUpTokenTimer = setInterval(() => {\n      this.getUpToken()\n    }, 1000 * 60 * 30)\n  },\n  beforeDestroy() {\n    this.getUpTokenTimer && clearInterval(this.getUpTokenTimer)\n  },\n  methods: {\n    async getUpToken() {\n      try {\n        await this.$store.dispatch('getUpToken')\n      } catch (e) {\n        // do nothing\n      }\n    },\n    handleImageUploadError(err, file) {\n      console.log(err)\n      this.uploadPending--\n      this.uploadImageList.forEach((item, index) => {\n        if (item.uid === file.uid) {\n          this.uploadImageList.splice(index, 1)\n        }\n      })\n      this.$toast.error(`图片：${file.name} 上传失败`)\n    },\n    beforeImageUpload(file) {\n      const isFormat = ~this.imageUploadAccept.split(',').indexOf(file.type)\n      const isLt5M = file.size / 1024 / 1024 < this.uploadConfig.max\n\n      if (!isFormat) {\n        this.$toast.error(\n          `仅支持上传${this.imageUploadAccept\n            .replace(/image\\//g, '')\n            .replace(/,/g, '、')}格式的图片`\n        )\n        return false\n      }\n      if (!isLt5M) {\n        this.$toast.error(`图片大小不能超过 ${this.uploadConfig.max}MB!`)\n        return false\n      }\n\n      const createFileName = ({ userId, page, file }) => {\n        return `admin/${userId}${page}/${new Date().getTime()}-${Math.random()\n          .toString(36)\n          .substring(3, 6)}.${file.type.split('/').pop()}`\n      }\n\n      this.uploadHeaders.key = createFileName({\n        userId: this.currentUser.id,\n        page: this.$route.path,\n        file\n      })\n\n      return true\n    },\n    handleImageUploadRemove(file) {\n      this.uploadImageList.forEach((item, index) => {\n        if (item.uid === file.uid) {\n          this.uploadImageList.splice(index, 1)\n        }\n      })\n    },\n    handleImageUploadSuccess(res, file) {\n      this.uploadImageList.forEach((item, index) => {\n        if (item.uid === file.uid) {\n          this.uploadImageList[index] = Object.assign(item, {\n            data: res.data,\n            status: 'success',\n            url: this.$resize(`${this.imagePrefix}${res.data.url}`, {\n              width: 100\n            })\n          })\n        }\n      })\n      this.uploadImageTotal++\n      this.uploadPending--\n    },\n    handleImageUploadBefore(file) {\n      if (!this.currentUser) {\n        this.$channel.$emit('sign-in')\n        return false\n      }\n\n      const isFormat =\n        this.imageUploadAccept.split(',').indexOf(file.type) !== -1\n      const isLtSize = file.size / 1024 / 1024 < this.uploadConfig.max\n\n      if (!isFormat) {\n        this.$toast.error('仅支持jpg, jpeg, png, gif格式的图片')\n        return false\n      }\n      if (!isLtSize) {\n        this.$toast.error(`图片大小不能超过 ${this.uploadConfig.max}MB!`)\n        return false\n      }\n\n      this.uploadHeaders.key = this.$utils.createFileName({\n        userId: this.$store.state.user.id,\n        type: this.$route.path,\n        file\n      })\n\n      this.uploadImageList.push({\n        name: file.name,\n        percentage: 0,\n        raw: file,\n        size: file.size,\n        status: 'uploading',\n        uid: file.uid\n      })\n      this.uploadPending++\n\n      return true\n    }\n  }\n}\n"],"mappings":"AAAA","sourceRoot":""}